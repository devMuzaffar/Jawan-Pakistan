Who are DevOps?

- Developer + Operation
- People who develops apps and do operation(like deploying).
- Operator - Has access to server, tests, and deploy apps

> CI CD
- CI - continuous integration
- CD - Continous deployment
- A lifecycle of planning,building,testing,deploying,monitoring
- you don't need any middle-man in this cycle, like infinite loop

- As DevOps, you work, you create any XYZ feature i.e authentication, Once done, you Git push to branch, It automatically deployed to XYZ server!
- this deployment possiblity we now have!

// Why Docker Containerization ?

> Example: you've created Application lets say Nodejs App on newer version, but server has Nodejs App Older version. You told Operator to Update his server, but he refused that updating to latest version might break other Applications that server running them on older versions. To Solve this version Problem.
> we use called Docker Containerization

// What is Docker?
- Docker is a industry-standard tool/software, which we containerized our applications

> We have Wrapped our Application in Container.
> Container is an Isolated Mode

- NOTE: Cloud Servers 95% supports Containerization

// What is the advantage?
- When Project is Containerized, No more dependent on versions. Will run easily as long as both systems have Docker installed!

> You Can also update softwares directly? if you have applications running on Older versions will cause problems after removing old and updating new version.
> You Can also Start/Stop each Container easily. 

- DockerHub - Similar to github, you can find many images.

- first Container is build, then images

- To install any image, goto DockerHub, find any image i.e nodejs, mysql.
- tag: means - latest, or specific version you can specify.
- MySQL's Pre-defined port number : 3306

- For Example: MySQL versions i want to use 5.7, v8, v7.
- I can use all these 3 versions in my system via Docker (by creating 3 containers)

// Problem:
- MySQL port is 3306, and want to use accross 3 versions?
+ We can't run all 3 versions apps in same port!
- Docker port binding!

// How to use Docker port Bindings?
- '-p HostPort:ContainerPort'
+ HostPort is your MySQL port
+ ContainerPort is your Docker' Container port
- Example : 
> MySql 5.7.3: -p 4000: 3306
> MySql V8: -p 4001: 3306
> MySql v7: -p 4002: 3306

// Node js installation docker
https://nodejs.org/en/docs/guides/nodejs-docker-webapp/

- FROM : from tells from where adn which version of image need to build

- After Creating Container, you can easily deploy on any server i.e aws, google cloud etc.
- Servers are mostly created on Linux, as well as Docker is made on Linux Kernel so they easily work.


// DigitalOcean or heroku
- These websites provide SSH access. means allocate virtual or dedicated servers.
- what does SSH do? basically ports command-line from server/machine to your PC.
- What ever you're doing commands on PC. will executes those commands on server!

> When Using github - you do changes in code, you git push, git pull, these commands have to do manually.
> To automate this process, we use github actions.
- Go to your Repo, click actions, create new workflow
- Google SSH github actions
- You can use any their workflow file which contains several commands on script
- .github/workflows - important to have this folder or else file will not work.

> Secrets are the hidden strings
- Go to your Repo and settings
- Go to secrets and add new Secret, and write anything i.e for username or password
- Specifying username password manually in script is not secure and not recommended so you need these secrets



// LIST bininng Flutter

// Note json is on http localHost server by nodejs
// IOS: does not support http, only https, so google it how to solve

// dio Package - similar to http used in restAPI
- dio is the easier version of Http and provides many more functions!
- download, install and import dio in flutter
- 



1:29:20




